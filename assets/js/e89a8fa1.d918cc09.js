"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[753],{3974:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});var i=s(5893),a=s(1151);const r={},o="Creating a Private Blockchain",t={id:"Private-Chain",title:"Creating a Private Blockchain",description:"mkchain",source:"@site/Private-Chain.md",sourceDirName:".",slug:"/Private-Chain",permalink:"/Private-Chain",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tezosK8sSidebar",previous:{title:"Tezos Baker",permalink:"/Baker"},next:{title:"Indexers",permalink:"/Indexers"}},l={},c=[{value:"mkchain",id:"mkchain",level:2},{value:"Start your private chain",id:"start-your-private-chain",level:2},{value:"Adding nodes within the cluster",id:"adding-nodes-within-the-cluster",level:2}];function d(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"creating-a-private-blockchain",children:"Creating a Private Blockchain"}),"\n",(0,i.jsx)(n.h2,{id:"mkchain",children:"mkchain"}),"\n",(0,i.jsx)(n.p,{children:"mkchain is a python script that generates Helm values, which Helm then uses to create your Tezos chain on k8s."}),"\n",(0,i.jsxs)(n.p,{children:["Follow ",(0,i.jsx)(n.em,{children:"just"})," the Install mkchain step in ",(0,i.jsx)(n.code,{children:"./mkchain/README.md"}),". See there for more info on how you can customize your chain."]}),"\n",(0,i.jsx)(n.p,{children:"Set as an environment variable the name you would like to give to your chain:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"export CHAIN_NAME=my-chain\n"})}),"\n",(0,i.jsx)(n.h2,{id:"start-your-private-chain",children:"Start your private chain"}),"\n",(0,i.jsxs)(n.p,{children:["Run ",(0,i.jsx)(n.code,{children:"mkchain"})," to create your Helm values"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"mkchain $CHAIN_NAME\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This will create the file ",(0,i.jsx)(n.code,{children:"./${CHAIN_NAME}_values.yaml"})]}),"\n",(0,i.jsx)(n.p,{children:"Create a Helm release that will start your chain:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"helm install $CHAIN_NAME tacoinfra/tezos-chain \\\n--values ./${CHAIN_NAME}_values.yaml \\\n--namespace tacoinfra --create-namespace\n"})}),"\n",(0,i.jsx)(n.p,{children:"Your kubernetes cluster will now be running a series of jobs to\nperform the following tasks:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"generate a node identity"}),"\n",(0,i.jsx)(n.li,{children:"create a baker account"}),"\n",(0,i.jsx)(n.li,{children:"generate a genesis block for your chain"}),"\n",(0,i.jsx)(n.li,{children:"start the bootstrap-node baker to bake/validate the chain"}),"\n",(0,i.jsx)(n.li,{children:"activate the protocol"}),"\n",(0,i.jsx)(n.li,{children:"bake the first block"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"You can find your node in the tacoinfra namespace with some status information using kubectl."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"kubectl -n tacoinfra get pods -l appType=octez-node\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You can view (and follow using the ",(0,i.jsx)(n.code,{children:"-f"})," flag) logs for your node using the following command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"kubectl -n tacoinfra logs -l appType=octez-node -c octez-node -f --prefix\n"})}),"\n",(0,i.jsx)(n.p,{children:"Congratulations! You now have an operational Tezos based permissioned\nchain running one node."}),"\n",(0,i.jsx)(n.h2,{id:"adding-nodes-within-the-cluster",children:"Adding nodes within the cluster"}),"\n",(0,i.jsxs)(n.p,{children:["You can spin up a number of regular peer nodes that don't bake in your cluster by passing ",(0,i.jsx)(n.code,{children:"--nodes N"})," to ",(0,i.jsx)(n.code,{children:"mkchain"}),". You can use this to both scale up and down."]}),"\n",(0,i.jsxs)(n.p,{children:["Or if you previously spun up the chain using ",(0,i.jsx)(n.code,{children:"mkchain"}),', you may adjust\nyour setup to an arbitrary number of nodes by updating the "nodes"\nsection in the values yaml file.']}),"\n",(0,i.jsxs)(n.p,{children:["nodes is a dictionary where each key value pair defines a statefulset\nand a number of instances thereof.  The name (key) defines the name of\nthe statefulset and will be the base of the pod names.  The name must be\nDNS compliant or you will get odd errors.  The instances are defined as a\nlist because their names are simply ",(0,i.jsx)(n.code,{children:"-N"})," appended to the statefulsetname.\nSaid names are traditionally kebab case."]}),"\n",(0,i.jsx)(n.p,{children:"At the statefulset level, the following parameters are allowed:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"storage_size: the size of the PV"}),"\n",(0,i.jsx)(n.li,{children:'runs: a list of containers to run, e.g. "baker", "accuser"'}),"\n",(0,i.jsxs)(n.li,{children:["instances: a list of nodes to fire up, each is a dictionary\ndefining:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"bake_using_accounts"}),": The name of the accounts that should be used\nfor baking."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"is_bootstrap_node"}),": Is this node a bootstrap peer."]}),"\n",(0,i.jsxs)(n.li,{children:["config: The ",(0,i.jsx)(n.code,{children:"config"})," property should mimic the structure\nof a node's config.json.\nRun ",(0,i.jsx)(n.code,{children:"tezos-node config --help"})," for more info."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"defaults are filled in for most values."}),"\n",(0,i.jsx)(n.p,{children:"E.g.:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"nodes:\n  baking-node:\n    storage_size: 15Gi\n    runs:\n      - baker\n      - logger\n    instances:\n      - bake_using_accounts: [baker0]\n        is_bootstrap_node: true\n        config:\n          shell:\n            history_mode: rolling\n  full-node:\n    instances:\n      - {}\n      - {}\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will run the following nodes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"baking-node-0"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"full-node-0"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"full-node-1"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"baking-node-0"})," will run baker and logger containers\nand will be the only bootstrap node.  ",(0,i.jsx)(n.code,{children:"full-node-*"})," are just nodes\nwith no extras."]}),"\n",(0,i.jsx)(n.p,{children:"To upgrade your Helm release run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"helm upgrade $CHAIN_NAME tacoinfra/tezos-chain \\\n--values ./${CHAIN_NAME}_values.yaml \\\n--namespace tacoinfra\n"})}),"\n",(0,i.jsx)(n.p,{children:"The nodes will start up and establish peer-to-peer connections in a full mesh topology."}),"\n",(0,i.jsxs)(n.p,{children:["List all of your running nodes: ",(0,i.jsx)(n.code,{children:"kubectl -n tacoinfra get pods -l appType=octez-node"})]})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>t,a:()=>o});var i=s(7294);const a={},r=i.createContext(a);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);